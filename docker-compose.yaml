version: "3.7"

networks:
  RED_DUMMY:
    driver: bridge

services:
  php:
    build:
      args:
        user: ${USR}
        uid: 1001
      context: ./
      dockerfile: Dockerfile
    image: php-${PREFIX_NAME}-8.0
    container_name: ${PREFIX_NAME}-php
    user: 1001:1001
    restart: unless-stopped
    working_dir: /var/www/
    ports:
      - ${PHP_PORT}:${PHP_CONT_PORT}
    volumes:
      - ./src:/var/www
    networks:
      - ${RED_NAME}
    depends_on:
      - postgres
      - mysql
      - mariadb
      - redis
  
  mysql:
    image: ${MY_IMG}
    container_name: ${PREFIX_NAME}-mysql
    restart: unless-stopped
    ports:
      - ${MY_PORT}:${MY_CONT_PORT}
    environment:
      MYSQL_DATABASE: ${MY_DB}
      MYSQL_ROOT_PASSWORD: ${MY_ROOT_PASS}
      MYSQL_PASSWORD: ${MY_USR_PASS}
      MYSQL_USER: ${MY_USR_NAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./supports/mysql/entrypoint:/docker-entrypoint-initdb.d
      - ./supports/mysql/data:/var/lib/mysql
    networks:
      - ${RED_NAME}

  
  mariadb:
    image: ${MARIA_IMG}
    #tty: true
    restart: always
    container_name: ${PREFIX_NAME}-mariadb
    networks:
      - ${RED_NAME}
    ports:
      - ${MARIA_PORT}:${MARIA_CONT_PORT}
    volumes:
      - ./supports/mariadb/config/mariadb.cnf:/etc/mysql/conf.d
      - ./supports/mariadb/dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MY_DB}
      MYSQL_ROOT_PASSWORD: ${MY_ROOT_PASS}
      MYSQL_PASSWORD: ${MY_USR_PASS}
      MYSQL_USER: ${MY_USR_NAME}  
  
  nginx:
    image: ${NGINX_IMG}
    container_name: ${PREFIX_NAME}-nginx
    restart: unless-stopped
    ports:
      - ${NGINX_PORT}:${NGINX_CONT_PORT}
    volumes:
      - ./src:/var/www
      - ./supports/nginx:/etc/nginx/conf.d
    networks:
      - ${RED_NAME}
    depends_on:
      - php
      - mysql
      - postgres
      - mariadb
      - redis

  postgres:
    image: ${PG_IMG}
    container_name: ${PREFIX_NAME}-postgres
    #tty: true
    restart: always
    networks:
      - ${RED_NAME}
    ports:
      - ${PG_PORT}:${PG_CONT_PORT}
    volumes:
      - ./supports/postgres/dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_USR_NAME}
      POSTGRES_PASSWORD: ${PG_USR_PASS}
      POSTGRES_DB: ${PG_DB}

  redis:
    image: ${REDIS_IMG}
    restart: always
  #   tty: true
    container_name: ${PREFIX_NAME}-redis
    volumes:
      - ./supports/redis:/redis/data
    networks:
      - ${RED_NAME}
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=root
    ports:
      - ${REDIS_PORT}:${REDIS_CONT_PORT}

